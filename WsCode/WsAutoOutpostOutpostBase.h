//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang
//  @ File Name : WsAutoOutpostOutpostBase.h
//  @ Date : 2/8/2009
//  @ Author : 
//
//


#if !defined(_WSAUTOOUTPOSTOUTPOSTBASE_H)
#define _WSAUTOOUTPOSTOUTPOSTBASE_H

#include <stdio.h>
#include "WsAutoProgramBase.h"

#include "WsAccumulator.h"
#include "WsEscalator.h"
#include "WsElevator.h"
#include "WsShooter.h"
#include "WsDriveVector.h"

class Timer;
class Dashboard;

class WsAutoOutpostOutpostBase : public WsAutoProgramBase
{
public:

    typedef enum
    {
        AUTO_STATE_INIT,
        AUTO_STATE_INIT_DELAY,
        AUTO_STATE_DRIVE1,
        AUTO_STATE_DRIVE2_DELAY,
        AUTO_STATE_DRIVE2,
        AUTO_STATE_DONE
    } WsAutoOutpostOutpostStateT;

    WsAutoOutpostOutpostBase();
    virtual ~WsAutoOutpostOutpostBase();
    virtual bool run(void );
    virtual void initParams(void);
protected:
    Timer* ap_timer;
    WsAutoOutpostOutpostStateT a_progState;
    UINT32 a_encoderCount;
    double a_timerCount;
    double a_initDelay;
    WsAccumulator::WsAccumulatorStateT a_initAccumState;
    float a_initEscFrontSpeed;
    float a_initEscBackSpeed;
    WsShooter::WsShooterStateT a_initShooterState;
    WsElevator::WsElevatorStateT a_initElevLeftState;
    WsElevator::WsElevatorStateT a_initElevRightState;
    float a_drive1CrabAngle;
    WsDriveVector a_drive1Vector;
    double a_drive1Timeout;
    double a_drive2Pause;
    float a_drive2CrabAngle;
    WsDriveVector a_drive2Vector;
    double a_drive2Timeout;
};

#endif  //_WSAUTOOUTPOSTOUTPOSTBASE_H
