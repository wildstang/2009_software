//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang
//  @ File Name : WsAutoSixStepBase.h
//  @ Date : 3/12/2009
//  @ Author : 
//
//


#if !defined(_WSAUTOSIXSTEPBASE_H)
#define _WSAUTOSIXSTEPBASE_H

#include <stdio.h>
#include "WsAutoProgramBase.h"

#include "WsAccumulator.h"
#include "WsEscalator.h"
#include "WsElevator.h"
#include "WsShooter.h"
#include "WsDriveVector.h"

class Timer;
class Dashboard;

#define MAX_STEPS 10

class WsAutoNStepBase : public WsAutoProgramBase
{
public:

    typedef enum
    {
        AUTO_STATE_INIT,
        AUTO_STATE_INIT_DELAY,
        AUTO_STATE_RUN_CMD,
        AUTO_STATE_CMD_COMPLETE,
        AUTO_STATE_DONE
    } WsAutoNStepStateT;

    typedef struct
    {
        float crabAngle;
        WsDriveVector driveVector;
        double timeout;
    } WsAutoNStepCmdT;

    WsAutoNStepBase();
    virtual ~WsAutoNStepBase();
    virtual bool run(void );
    virtual void addStep(const WsAutoNStepCmdT& cmd);
    virtual void initParams(void);
protected:
    WsAutoNStepStateT a_progState;

    // Attributes for init
    WsAccumulator::WsAccumulatorStateT a_initAccumState;
    float a_initEscFrontSpeed;
    float a_initEscBackSpeed;
    WsShooter::WsShooterStateT a_initShooterState;
    WsElevator::WsElevatorStateT a_initElevLeftState;
    WsElevator::WsElevatorStateT a_initElevRightState;

    // Attributes for init delay
    double a_initDelay;

    WsAutoNStepCmdT a_cmdList[MAX_STEPS];

    // Attributes for done
    float a_doneCrabAngle;

    WsAccumulator::WsAccumulatorStateT a_doneAccumState;
    float a_doneEscFrontSpeed;
    float a_doneEscBackSpeed;
    WsShooter::WsShooterStateT a_doneShooterState;
    WsElevator::WsElevatorStateT a_doneElevLeftState;
    WsElevator::WsElevatorStateT a_doneElevRightState;

    UINT8 a_cmdIdx;
    UINT8 a_currentCmd;
};

#endif  //_WSAUTOSIXSTEPBASE_H
