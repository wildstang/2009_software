//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2009
//  @ File Name : WsControlMethodCrab.cpp
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#include "WsControlMethodCrab.h"
#include "WsDriveVector.h"
#include "WsControllerPolarStick.h"
#include "WsControllerButton.h"
#include "WsDashboard.h"

WsControlMethodCrab::WsControlMethodCrab()
{
    ap_crabDisableButton = NULL;
    ap_crabManualButton = NULL;
    ap_crabNudgeLeftButton = NULL;
    ap_crabNudgeRightButton = NULL;
    ap_crabStick = NULL;
    a_crab_stick_radius_thresh = 0.75;
    a_crab_manu_scale = 0.50;
    //a_crab_nudge_angle = 5;
    a_crab_nudge_angle = 10;

    ap_dashboard = WsDashboard::getInstance();
}

WsControlMethodCrab::~WsControlMethodCrab()
{
}

void WsControlMethodCrab::assignCrabStick(WsControllerPolarStick* p_stick)
{
    ap_crabStick = p_stick;
}

void WsControlMethodCrab::assignCrabDisableButton(WsControllerButton* p_disable)
{
    ap_crabDisableButton = p_disable;
}

void WsControlMethodCrab::assignCrabManualButton(WsControllerButton* p_manual)
{
    ap_crabManualButton = p_manual;
}

void WsControlMethodCrab::assignCrabNudgeButtons(WsControllerButton* p_left, WsControllerButton* p_right)
{
    ap_crabNudgeLeftButton = p_left;
    ap_crabNudgeRightButton = p_right;
}

WsDriveVector WsControlMethodCrab::getDriveVector(void )
{
    WsDriveVector v;

    v = WsControlMethodArcade::getDriveVector();

    ap_dashboard->setValue(IDX_DES_DRIVE_SPEED, v.a_speed);
    ap_dashboard->setValue(IDX_DES_DRIVE_ANGLE, v.a_direction);

    return v;
}

bool WsControlMethodCrab::getCrabEnableState(void )
{
    bool state = true;

    if(ap_crabDisableButton != NULL)
    {
        state = !ap_crabDisableButton->getState();
    }

    return state;
}

float WsControlMethodCrab::getCrabWheelAngle(void )
{
    float crabX = 0;
    float crabY = 0;
    float crabRadius = 0;
    float crabAngle = 0;
    float wheelAngle = 0;

    CrabNudgeStateT nudgeState = NUDGE_NONE;

    if((ap_crabNudgeLeftButton != NULL) &&
       (ap_crabNudgeRightButton != NULL))
    {
        if(ap_crabNudgeLeftButton->getState() == true)
        {
            nudgeState = NUDGE_LEFT;
        }
        else if(ap_crabNudgeRightButton->getState() == true)
        {
            nudgeState = NUDGE_RIGHT;
        }
    }

    if(nudgeState == NUDGE_NONE)
    {
        if(ap_crabStick != NULL)
        {
            crabX =  ap_crabStick->getX();
            crabY =  ap_crabStick->getY();
            crabRadius = ap_crabStick->getRadius();

            if(crabRadius > a_crab_stick_radius_thresh)
            {
                crabAngle = ap_crabStick->getAngle();
                wheelAngle = crabAngle;
            }
        }
    }
    else
    {
        wheelAngle = a_crab_nudge_angle;
        if(nudgeState == NUDGE_LEFT)
        {
            wheelAngle *= -1;
        }
    }

    ap_dashboard->setValue(IDX_IN_CRAB_X, crabX);
    ap_dashboard->setValue(IDX_IN_CRAB_Y, crabY);
    ap_dashboard->setValue(IDX_IN_CRAB_RADIUS, crabRadius);
    ap_dashboard->setValue(IDX_IN_CRAB_ANGLE, crabAngle);

    ap_dashboard->setValue(IDX_DES_CRAB_ANGLE, wheelAngle);

    return wheelAngle;
}

float WsControlMethodCrab::getCrabManualSpeed(void )
{
    float crabX = 0;
    float crabY = 0;
    float crabRadius = 0;
    float crabAngle = 0;
    float speed = 0;
    
    
    if(ap_crabStick != NULL)
    {
        crabX =  ap_crabStick->getX();
        crabY =  ap_crabStick->getY();
        crabRadius = ap_crabStick->getRadius();
        crabAngle = ap_crabStick->getAngle();
    }

    if(ap_crabManualButton != NULL)
    {
        if(ap_crabManualButton->getState() == true)
        {
            speed = crabX;
        }
    }

    speed *= a_crab_manu_scale;

    ap_dashboard->setValue(IDX_IN_CRAB_X, crabX);
    ap_dashboard->setValue(IDX_IN_CRAB_Y, crabY);
    ap_dashboard->setValue(IDX_IN_CRAB_RADIUS, crabRadius);
    ap_dashboard->setValue(IDX_DES_CRAB_MANUAL_SPEED, speed);
    
 

    return speed;
}

