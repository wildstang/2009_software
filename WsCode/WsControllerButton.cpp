//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang 2009
//  @ File Name : WsControllerButton.cpp
//  @ Date : 1/14/2009
//  @ Author : 
//
//


#include "WsControllerButton.h"
#include "Joystick.h"
#include "Gamepad.h"
#include "DriverStation.h"

WsControllerButton::WsControllerButton(Joystick* p_js, UINT32 button)
{
    ap_joystick = p_js;
    ap_gamepad = NULL;
    ap_ds = NULL;
    a_buttonNum = button;
    a_dpadDir = Gamepad::kCenter;
    a_channelNum = 0;
    a_invert = 0;
}

WsControllerButton::WsControllerButton(Gamepad* p_pad, UINT32 button)
{
    ap_joystick = NULL;
    ap_gamepad = p_pad;
    ap_ds = NULL;
    a_buttonNum = button;
    a_dpadDir = Gamepad::kCenter;
    a_channelNum = 0;
    a_invert = 0;
}

WsControllerButton::WsControllerButton(Gamepad* p_pad, Gamepad::DPadDirection direction)
{
    ap_joystick = NULL;
    ap_gamepad = p_pad;
    ap_ds = NULL;
    a_buttonNum = 0;
    a_dpadDir = direction;
    a_channelNum = 0;
    a_invert = 0;
}


WsControllerButton::WsControllerButton(UINT32 channel)
{
    ap_joystick = NULL;
    ap_gamepad = NULL;
    ap_ds = DriverStation::GetInstance();
    a_buttonNum = 0;
    a_channelNum = channel;
    a_invert = 0;
}

WsControllerButton::~WsControllerButton()
{
}

void WsControllerButton::resetState(void)
{
    // nothing to do here.  the child class will override as needed
}

bool WsControllerButton::getState(void )
{
    bool state = false;

    if(ap_joystick != NULL)
    {
        state = ap_joystick->GetRawButton(a_buttonNum);
    }
    else if(ap_gamepad != NULL)
    {
        if(a_dpadDir == Gamepad::kCenter)
        {
            state = ap_gamepad->GetNumberedButton(a_buttonNum);
        }
        else
        {
            if(ap_gamepad->GetDPad() == a_dpadDir)
            {
                state = true;
            }
            else
            {
                state = false;
            }
        }
    }
    else if((ap_ds != NULL) && (a_channelNum != 0))
    {
        state = ap_ds->GetDigitalIn(a_channelNum);
    }

    state = applyInvert(state);

    return state;
}

bool WsControllerButton::applyInvert(bool state)
{
    if(a_invert == true)
    {
        return !state;
    }
    else
    {
        return state;
    }

}

