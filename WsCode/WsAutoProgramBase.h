//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wildstang
//  @ File Name : WsAutoProgramBase.h
//  @ Date : 2/8/2009
//  @ Author : 
//
//


#if !defined(_WSAUTOPROGRAMBASE_H)
#define _WSAUTOPROGRAMBASE_H

#include <stdio.h>

class WsDriveVector;
class WsDriveBaseCrabSingle;
class WsAccumulator;
class WsEscalator;
class WsElevator;
class WsShooter;
class WsDashboard;
class Timer;

class WsAutoProgramBase
{
public:
    WsAutoProgramBase();
    virtual ~WsAutoProgramBase();
    virtual bool run(void );
    virtual void initParams(void) = 0;
    void assignDriveBase(WsDriveBaseCrabSingle* p_driveBase);
    void assignAccumulator(WsAccumulator* p_accum);
    void assignEscalator(WsEscalator* p_esc);
    void assignElevators(WsElevator* p_elevLeft, WsElevator* p_elevRight);
    void assignShooter(WsShooter* p_shooter);
    void turnOffDriveBase(void );
    void turnOffAppendages(void );
    bool delay(double delayTime, double* p_currentTime);
    bool driveByTime(WsDriveVector* p_driveVector,
                     float crabAngle,
                     double driveTime,
                     double* p_currentTime);
    bool coastPointWheels(float crabAngle,
                          double delayTime,
                          double* p_currentTime);
protected:
    WsDriveBaseCrabSingle* ap_driveBase;
    WsAccumulator* ap_accumulator;
    WsEscalator* ap_escalator;
    WsElevator* ap_elevatorLeft;
    WsElevator* ap_elevatorRight;
    WsShooter* ap_shooter;
    WsDashboard* ap_dashboard;
    Timer* ap_timer;
    bool a_timerStartFlag;
};

#endif  //_WSAUTOPROGRAMBASE_H
